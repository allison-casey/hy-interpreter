["^ ","~:output",["^ ","~:js","goog.provide('re_frame.fx');\nre_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.fx.kind) : re_frame.registrar.kinds.call(null,re_frame.fx.kind)))){\n} else {\nthrow (new Error(\"Assert failed: (re-frame.registrar/kinds kind)\"));\n}\nre_frame.fx.reg_fx = (function re_frame$fx$reg_fx(id,handler){\nreturn re_frame.registrar.register_handler(re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \"set flag\"}\n * \n *   it will call the registered effect handlers for each of the map's keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed, other than that\n *   `:db` is guaranteed to be executed first.\n */\nre_frame.fx.do_fx = re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function re_frame$fx$do_fx_after(context){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__33904 = re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__33905 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452)], null));\n(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__33905);\n\ntry{try{var effects = new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\nvar effects_without_db = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar temp__5735__auto___33998 = new cljs.core.Keyword(null,\"db\",\"db\",993250759).cljs$core$IFn$_invoke$arity$1(effects);\nif(cljs.core.truth_(temp__5735__auto___33998)){\nvar new_db_33999 = temp__5735__auto___33998;\nvar fexpr__33912_34000 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\"db\",\"db\",993250759),false);\n(fexpr__33912_34000.cljs$core$IFn$_invoke$arity$1 ? fexpr__33912_34000.cljs$core$IFn$_invoke$arity$1(new_db_33999) : fexpr__33912_34000.call(null,new_db_33999));\n} else {\n}\n\nvar seq__33913 = cljs.core.seq(effects_without_db);\nvar chunk__33914 = null;\nvar count__33915 = (0);\nvar i__33916 = (0);\nwhile(true){\nif((i__33916 < count__33915)){\nvar vec__33926 = chunk__33914.cljs$core$IIndexed$_nth$arity$2(null,i__33916);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33926,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33926,(1),null);\nvar temp__5733__auto___34001 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___34001)){\nvar effect_fn_34002 = temp__5733__auto___34001;\n(effect_fn_34002.cljs$core$IFn$_invoke$arity$1 ? effect_fn_34002.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_34002.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__34003 = seq__33913;\nvar G__34004 = chunk__33914;\nvar G__34005 = count__33915;\nvar G__34006 = (i__33916 + (1));\nseq__33913 = G__34003;\nchunk__33914 = G__34004;\ncount__33915 = G__34005;\ni__33916 = G__34006;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__33913);\nif(temp__5735__auto__){\nvar seq__33913__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__33913__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__33913__$1);\nvar G__34007 = cljs.core.chunk_rest(seq__33913__$1);\nvar G__34008 = c__4556__auto__;\nvar G__34009 = cljs.core.count(c__4556__auto__);\nvar G__34010 = (0);\nseq__33913 = G__34007;\nchunk__33914 = G__34008;\ncount__33915 = G__34009;\ni__33916 = G__34010;\ncontinue;\n} else {\nvar vec__33930 = cljs.core.first(seq__33913__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33930,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33930,(1),null);\nvar temp__5733__auto___34011 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___34011)){\nvar effect_fn_34012 = temp__5733__auto___34011;\n(effect_fn_34012.cljs$core$IFn$_invoke$arity$1 ? effect_fn_34012.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_34012.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__34013 = cljs.core.next(seq__33913__$1);\nvar G__34014 = null;\nvar G__34015 = (0);\nvar G__34016 = (0);\nseq__33913 = G__34013;\nchunk__33914 = G__34014;\ncount__33915 = G__34015;\ni__33916 = G__34016;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__33582__auto___34017 = re_frame.interop.now();\nvar duration__33583__auto___34018 = (end__33582__auto___34017 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__33583__auto___34018,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__33582__auto___34017);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__33904);\n}} else {\nvar effects = new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\nvar effects_without_db = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar temp__5735__auto___34020 = new cljs.core.Keyword(null,\"db\",\"db\",993250759).cljs$core$IFn$_invoke$arity$1(effects);\nif(cljs.core.truth_(temp__5735__auto___34020)){\nvar new_db_34021 = temp__5735__auto___34020;\nvar fexpr__33934_34023 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\"db\",\"db\",993250759),false);\n(fexpr__33934_34023.cljs$core$IFn$_invoke$arity$1 ? fexpr__33934_34023.cljs$core$IFn$_invoke$arity$1(new_db_34021) : fexpr__33934_34023.call(null,new_db_34021));\n} else {\n}\n\nvar seq__33935 = cljs.core.seq(effects_without_db);\nvar chunk__33936 = null;\nvar count__33937 = (0);\nvar i__33938 = (0);\nwhile(true){\nif((i__33938 < count__33937)){\nvar vec__33945 = chunk__33936.cljs$core$IIndexed$_nth$arity$2(null,i__33938);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33945,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33945,(1),null);\nvar temp__5733__auto___34024 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___34024)){\nvar effect_fn_34025 = temp__5733__auto___34024;\n(effect_fn_34025.cljs$core$IFn$_invoke$arity$1 ? effect_fn_34025.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_34025.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__34026 = seq__33935;\nvar G__34027 = chunk__33936;\nvar G__34028 = count__33937;\nvar G__34029 = (i__33938 + (1));\nseq__33935 = G__34026;\nchunk__33936 = G__34027;\ncount__33937 = G__34028;\ni__33938 = G__34029;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__33935);\nif(temp__5735__auto__){\nvar seq__33935__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__33935__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__33935__$1);\nvar G__34030 = cljs.core.chunk_rest(seq__33935__$1);\nvar G__34031 = c__4556__auto__;\nvar G__34032 = cljs.core.count(c__4556__auto__);\nvar G__34033 = (0);\nseq__33935 = G__34030;\nchunk__33936 = G__34031;\ncount__33937 = G__34032;\ni__33938 = G__34033;\ncontinue;\n} else {\nvar vec__33948 = cljs.core.first(seq__33935__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33948,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33948,(1),null);\nvar temp__5733__auto___34034 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___34034)){\nvar effect_fn_34035 = temp__5733__auto___34034;\n(effect_fn_34035.cljs$core$IFn$_invoke$arity$1 ? effect_fn_34035.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_34035.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\"], 0));\n}\n\n\nvar G__34036 = cljs.core.next(seq__33935__$1);\nvar G__34037 = null;\nvar G__34038 = (0);\nvar G__34039 = (0);\nseq__33935 = G__34036;\nchunk__33936 = G__34037;\ncount__33937 = G__34038;\ni__33938 = G__34039;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n})], 0));\nre_frame.fx.dispatch_later = (function re_frame$fx$dispatch_later(p__33952){\nvar map__33953 = p__33952;\nvar map__33953__$1 = (((((!((map__33953 == null))))?(((((map__33953.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__33953.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__33953):map__33953);\nvar effect = map__33953__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33953__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33953__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nreturn re_frame.interop.set_timeout_BANG_((function (){\nreturn re_frame.router.dispatch(dispatch);\n}),ms);\n}\n});\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\nif(cljs.core.map_QMARK_(value)){\nreturn re_frame.fx.dispatch_later(value);\n} else {\nvar seq__33957 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__33958 = null;\nvar count__33959 = (0);\nvar i__33960 = (0);\nwhile(true){\nif((i__33960 < count__33959)){\nvar effect = chunk__33958.cljs$core$IIndexed$_nth$arity$2(null,i__33960);\nre_frame.fx.dispatch_later(effect);\n\n\nvar G__34042 = seq__33957;\nvar G__34043 = chunk__33958;\nvar G__34044 = count__33959;\nvar G__34045 = (i__33960 + (1));\nseq__33957 = G__34042;\nchunk__33958 = G__34043;\ncount__33959 = G__34044;\ni__33960 = G__34045;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__33957);\nif(temp__5735__auto__){\nvar seq__33957__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__33957__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__33957__$1);\nvar G__34046 = cljs.core.chunk_rest(seq__33957__$1);\nvar G__34047 = c__4556__auto__;\nvar G__34048 = cljs.core.count(c__4556__auto__);\nvar G__34049 = (0);\nseq__33957 = G__34046;\nchunk__33958 = G__34047;\ncount__33959 = G__34048;\ni__33960 = G__34049;\ncontinue;\n} else {\nvar effect = cljs.core.first(seq__33957__$1);\nre_frame.fx.dispatch_later(effect);\n\n\nvar G__34050 = cljs.core.next(seq__33957__$1);\nvar G__34051 = null;\nvar G__34052 = (0);\nvar G__34053 = (0);\nseq__33957 = G__34050;\nchunk__33958 = G__34051;\ncount__33959 = G__34052;\ni__33960 = G__34053;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572),(function (seq_of_effects){\nif((!(cljs.core.sequential_QMARK_(seq_of_effects)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect expects a seq, but was given \",cljs.core.type(seq_of_effects)], 0));\n} else {\nvar seq__33962 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,seq_of_effects));\nvar chunk__33963 = null;\nvar count__33964 = (0);\nvar i__33965 = (0);\nwhile(true){\nif((i__33965 < count__33964)){\nvar vec__33972 = chunk__33963.cljs$core$IIndexed$_nth$arity$2(null,i__33965);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33972,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33972,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"db\",\"db\",993250759),effect_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect should not contain a :db effect\"], 0));\n} else {\n}\n\nvar temp__5733__auto___34054 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___34054)){\nvar effect_fn_34055 = temp__5733__auto___34054;\n(effect_fn_34055.cljs$core$IFn$_invoke$arity$1 ? effect_fn_34055.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_34055.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in \\\":fx\\\" effect found \",effect_key,\" which has no associated handler. Ignoring.\"], 0));\n}\n\n\nvar G__34056 = seq__33962;\nvar G__34057 = chunk__33963;\nvar G__34058 = count__33964;\nvar G__34059 = (i__33965 + (1));\nseq__33962 = G__34056;\nchunk__33963 = G__34057;\ncount__33964 = G__34058;\ni__33965 = G__34059;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__33962);\nif(temp__5735__auto__){\nvar seq__33962__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__33962__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__33962__$1);\nvar G__34060 = cljs.core.chunk_rest(seq__33962__$1);\nvar G__34061 = c__4556__auto__;\nvar G__34062 = cljs.core.count(c__4556__auto__);\nvar G__34063 = (0);\nseq__33962 = G__34060;\nchunk__33963 = G__34061;\ncount__33964 = G__34062;\ni__33965 = G__34063;\ncontinue;\n} else {\nvar vec__33987 = cljs.core.first(seq__33962__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33987,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33987,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"db\",\"db\",993250759),effect_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect should not contain a :db effect\"], 0));\n} else {\n}\n\nvar temp__5733__auto___34064 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5733__auto___34064)){\nvar effect_fn_34066 = temp__5733__auto___34064;\n(effect_fn_34066.cljs$core$IFn$_invoke$arity$1 ? effect_fn_34066.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_34066.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in \\\":fx\\\" effect found \",effect_key,\" which has no associated handler. Ignoring.\"], 0));\n}\n\n\nvar G__34067 = cljs.core.next(seq__33962__$1);\nvar G__34068 = null;\nvar G__34069 = (0);\nvar G__34070 = (0);\nseq__33962 = G__34067;\nchunk__33963 = G__34068;\ncount__33964 = G__34069;\ni__33965 = G__34070;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\n} else {\nreturn re_frame.router.dispatch(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\",value], 0));\n} else {\nvar seq__33990 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__33991 = null;\nvar count__33992 = (0);\nvar i__33993 = (0);\nwhile(true){\nif((i__33993 < count__33992)){\nvar event = chunk__33991.cljs$core$IIndexed$_nth$arity$2(null,i__33993);\nre_frame.router.dispatch(event);\n\n\nvar G__34071 = seq__33990;\nvar G__34072 = chunk__33991;\nvar G__34073 = count__33992;\nvar G__34074 = (i__33993 + (1));\nseq__33990 = G__34071;\nchunk__33991 = G__34072;\ncount__33992 = G__34073;\ni__33993 = G__34074;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__33990);\nif(temp__5735__auto__){\nvar seq__33990__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__33990__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__33990__$1);\nvar G__34075 = cljs.core.chunk_rest(seq__33990__$1);\nvar G__34076 = c__4556__auto__;\nvar G__34077 = cljs.core.count(c__4556__auto__);\nvar G__34078 = (0);\nseq__33990 = G__34075;\nchunk__33991 = G__34076;\ncount__33992 = G__34077;\ni__33993 = G__34078;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__33990__$1);\nre_frame.router.dispatch(event);\n\n\nvar G__34079 = cljs.core.next(seq__33990__$1);\nvar G__34080 = null;\nvar G__34081 = (0);\nvar G__34082 = (0);\nseq__33990 = G__34079;\nchunk__33991 = G__34080;\ncount__33992 = G__34081;\ni__33993 = G__34082;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_frame.registrar.clear_handlers,re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__33994 = cljs.core.seq(value);\nvar chunk__33995 = null;\nvar count__33996 = (0);\nvar i__33997 = (0);\nwhile(true){\nif((i__33997 < count__33996)){\nvar event = chunk__33995.cljs$core$IIndexed$_nth$arity$2(null,i__33997);\nclear_event(event);\n\n\nvar G__34084 = seq__33994;\nvar G__34085 = chunk__33995;\nvar G__34086 = count__33996;\nvar G__34087 = (i__33997 + (1));\nseq__33994 = G__34084;\nchunk__33995 = G__34085;\ncount__33996 = G__34086;\ni__33997 = G__34087;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__33994);\nif(temp__5735__auto__){\nvar seq__33994__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__33994__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__33994__$1);\nvar G__34088 = cljs.core.chunk_rest(seq__33994__$1);\nvar G__34089 = c__4556__auto__;\nvar G__34090 = cljs.core.count(c__4556__auto__);\nvar G__34091 = (0);\nseq__33994 = G__34088;\nchunk__33995 = G__34089;\ncount__33996 = G__34090;\ni__33997 = G__34091;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__33994__$1);\nclear_event(event);\n\n\nvar G__34092 = cljs.core.next(seq__33994__$1);\nvar G__34093 = null;\nvar G__34094 = (0);\nvar G__34095 = (0);\nseq__33994 = G__34092;\nchunk__33995 = G__34093;\ncount__33996 = G__34094;\ni__33997 = G__34095;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn clear_event(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\nif((!((cljs.core.deref(re_frame.db.app_db) === value)))){\nreturn cljs.core.reset_BANG_(re_frame.db.app_db,value);\n} else {\nreturn null;\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.fx","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^M","~$re-frame.interceptor","^N","~$re-frame.events","^O","~$re-frame.trace","^P","~$re-frame.registrar","^Q","~$cljs.core","^R","~$goog","^S","~$router","~$re-frame.router","^U","^U","~$trace","^P","~$events","^O","~$re-frame.loggers","^X","~$re-frame.db","^Y"],"~:seen",["^F",["~:require"]],"~:uses",["^ ","~$app-db","^Y","~$->interceptor","^N","~$set-timeout!","^M","~$get-handler","^Q","~$clear-handlers","^Q","~$register-handler","^Q","~$console","^X"],"~:require-macros",["^ ","^P","^P","^V","^P","^R","^R"],"~:form",["~#list",["~$ns","^H",["^1:",["^[",["^U","~:as","^T"],["^Y","~:refer",["^11"]],["^N","^1=",["^12"]],["^M","^1=",["^13"]],["^O","^1<","^W"],["^Q","^1=",["^14","^15","^16"]],["^X","^1=",["^17"]],["^P","^1<","^V","~:include-macros",true]]]]],"~:flags",["^ ","^[",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^S","^R","^U","^Y","^N","^M","^O","^Q","^X","^P"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","re_frame/fx.cljc"],"~:compiled-at",1605339371384,"~:resource-name","re_frame/fx.cljc","~:warnings",[],"~:source","(ns re-frame.fx\n  (:require\n    [re-frame.router      :as router]\n    [re-frame.db          :refer [app-db]]\n    [re-frame.interceptor :refer [->interceptor]]\n    [re-frame.interop     :refer [set-timeout!]]\n    [re-frame.events      :as events]\n    [re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n    [re-frame.loggers     :refer [console]]\n    [re-frame.trace :as trace :include-macros true]))\n\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first.\"\n  (->interceptor\n    :id :do-fx\n    :after (fn do-fx-after\n             [context]\n             (trace/with-trace\n               {:op-type :event/do-fx}\n               (let [effects            (:effects context)\n                     effects-without-db (dissoc effects :db)]\n                 ;; :db effect is guaranteed to be handled before all other effects.\n                 (when-let [new-db (:db effects)]\n                   ((get-handler kind :db false) new-db))\n                 (doseq [[effect-key effect-value] effects-without-db]\n                   (if-let [effect-fn (get-handler kind effect-key false)]\n                     (effect-fn effect-value)\n                     (console :warn \"re-frame: no handler registered for effect:\" effect-key \". Ignoring.\"))))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n;; Note: nil entries in the collection are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-later [ (when (> 3 5) {:ms 200 :dispatch [:conditioned-out]})\n;;                       {:ms 100 :dispatch [:another-one]}]}\n;;\n(defn dispatch-later\n  [{:keys [ms dispatch] :as effect}]\n  (if (or (empty? dispatch) (not (number? ms)))\n    (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n    (set-timeout! #(router/dispatch dispatch) ms)))\n\n(reg-fx\n  :dispatch-later\n  (fn [value]\n    (if (map? value)\n      (dispatch-later value)\n      (doseq [effect (remove nil? value)]\n        (dispatch-later effect)))))\n\n;; :fx\n;;\n;; Handle one or more effects. Expects a collection of vectors (tuples) of the\n;; form [effect-key effect-value]. `nil` entries in the collection are ignored\n;; so effects can be added conditionally.\n;;\n;; usage:\n;;\n;; {:fx [[:dispatch [:event-id \"param\"]]\n;;       nil\n;;       [:http-xhrio {:method :post\n;;                     ...}]]}\n;;\n\n(reg-fx\n  :fx\n  (fn [seq-of-effects]\n    (if-not (sequential? seq-of-effects)\n      (console :error \"re-frame: \\\":fx\\\" effect expects a seq, but was given \" (type seq-of-effects))\n      (doseq [[effect-key effect-value] (remove nil? seq-of-effects)]\n        (when (= :db effect-key)\n          (console :warn \"re-frame: \\\":fx\\\" effect should not contain a :db effect\"))\n        (if-let [effect-fn (get-handler kind effect-key false)]\n          (effect-fn effect-value)\n          (console :warn \"re-frame: in \\\":fx\\\" effect found \" effect-key \" which has no associated handler. Ignoring.\"))))))\n\n;; :dispatch\n;;\n;; `dispatch` one event. Expects a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n  :dispatch\n  (fn [value]\n    (if-not (vector? value)\n      (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n      (router/dispatch value))))\n\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n  :dispatch-n\n  (fn [value]\n    (if-not (sequential? value)\n      (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\" value)\n      (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n  :deregister-event-handler\n  (fn [value]\n    (let [clear-event (partial clear-handlers events/kind)]\n      (if (sequential? value)\n        (doseq [event value] (clear-event event))\n        (clear-event value)))))\n\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n  :db\n  (fn [value]\n    (if-not (identical? @app-db value)\n      (reset! app-db value))))\n\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["re-frame.fx/kind","js/Error","re-frame.registrar/kinds","re-frame.fx/reg-fx","id","handler","re-frame.registrar/register-handler","re-frame.fx/do-fx","re_frame.interceptor.__GT_interceptor","context","re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__33904","re-frame.trace/*current-trace*","*current-trace*-temp-val__33905","re-frame.trace/start-trace","end__33582__auto__","re-frame.interop/now","duration__33583__auto__","cljs.core.swap_BANG_","re-frame.trace/traces","cljs.core/conj","cljs.core.assoc","re-frame.trace/run-tracing-callbacks!","effects","effects-without-db","cljs.core.dissoc","temp__5735__auto__","new-db","fexpr__33912","fexpr__33934","re_frame.registrar.get_handler","seq__33913","cljs.core/seq","chunk__33914","count__33915","i__33916","vec__33926","cljs.core.nth","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__33930","cljs.core/first","cljs.core/next","seq__33935","chunk__33936","count__33937","i__33938","vec__33945","vec__33948","effect-key","effect-value","temp__5733__auto__","effect-fn","re_frame.loggers.console","p__33952","map__33953","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","re-frame.fx/dispatch-later","ms","dispatch","effect","cljs.core/empty?","re-frame.interop/set-timeout!","re-frame.router/dispatch","value","cljs.core/map?","seq__33957","chunk__33958","count__33959","i__33960","cljs.core.remove","cljs.core/nil?","seq-of-effects","cljs.core/sequential?","cljs.core/type","seq__33962","chunk__33963","count__33964","i__33965","vec__33972","vec__33987","cljs.core._EQ_","cljs.core/vector?","seq__33990","chunk__33991","count__33992","i__33993","event","clear-event","cljs.core.partial","re-frame.registrar/clear-handlers","re-frame.events/kind","seq__33994","chunk__33995","count__33996","i__33997","cljs.core/deref","re-frame.db/app-db","cljs.core/reset!"]],"~:used-vars",["^F",["~$re-frame.fx/kind","~$cljs.core/sequential?","~$re-frame.fx/reg-fx","~$re-frame.db/app-db","~$re-frame.fx/do-fx","~$cljs.core/vector?","~$cljs.core/=","~$re-frame.trace/traces","~$re-frame.interceptor/->interceptor","~$cljs.core/count","~$cljs.core/deref","~$re-frame.registrar/kinds","~$re-frame.fx/dispatch-later","~$re-frame.loggers/console","~$cljs.core/chunk-rest","~$re-frame.interop/now","~$cljs.core/empty?","~$cljs.core/map?","~$cljs.core/reset!","~$re-frame.registrar/register-handler","~$cljs.core/conj","~$cljs.core/swap!","~$re-frame.trace/is-trace-enabled?","~$re-frame.trace/*current-trace*","~$cljs.core/next","~$cljs.core/not","~$cljs.core/assoc","~$re-frame.router/dispatch","~$re-frame.trace/run-tracing-callbacks!","~$re-frame.interop/set-timeout!","~$js/Error","~$cljs.core/type","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1C","reagent/impl/batching.cljs"],["71172e9be671755156730f86af647b7c667093fa","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^S","^R","~$reagent.debug","~$reagent.impl.util"]]],["^1C","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","~$goog.dom.HtmlElement"]]],["^1C","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","~$goog.labs.userAgent.util","~$goog.string"]]],["^1C","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","~$goog.array","~$goog.asserts"]]],["^1C","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S"]]],["^1C","goog/events/eventtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","~$goog.events.BrowserFeature","~$goog.userAgent"]]],["^1C","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2O","^2M","~$goog.object","~$goog.string.internal"]]],["^1C","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2P","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2T"]]],["^1C","re_frame/loggers.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R","~$clojure.set"]]],["^1C","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2P"]]],["~:shadow.build.npm/resource","node_modules/prop-types/checkPropTypes.js"],["d747ad68d8b63e918b83411f6780402d53ff7e91","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","3180f5f58c360a2e36c5ff354213b3ff22f43d1b","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["~$shadow.js","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1C","reagent/impl/util.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R","~$clojure.string","~$clojure.walk","^2S","^2J"]]],["^1C","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^2M","~$goog.reflect","^2N"]]],["^1C","re_frame/router.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R","^O","^M","^X","^P"]]],["^1C","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S"]]],["^1C","goog/events/events.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2P","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","^2Q","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1C","re_frame/registrar.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R","^M","^X","~$re-frame.settings"]]],["^1C","goog/events/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2R"]]],["^1C","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S"]]],["^1C","reagent/ratom.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R","^2K","^2J","~$reagent.impl.batching","^2[","^2S"]]],["^1C","re_frame/interop.cljs"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R","~$goog.async.nextTick","~$goog.events","~$reagent.core","~$reagent.ratom"]]],["^1C","goog/disposable/disposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","~$goog.disposable.IDisposable"]]],["^1C","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S"]]],["^30","node_modules/react/index.js"],["d747ad68d8b63e918b83411f6780402d53ff7e91","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^31","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1C","shadow/js.js"],["a8b89050e877436ecc7f58bd6d199cd8d399a9b5","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S"]]],["^1C","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S"]]],["^1C","reagent/impl/template.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R","^A","^33","^2K","~$reagent.impl.component","^3>","~$reagent.impl.input","~$reagent.impl.protocols","^3B","^2J","^2S"]]],["^1C","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2P"]]],"~:SHADOW-TIMESTAMP",[1605284826000,1605284826000,1593457559000],["^30","node_modules/react/cjs/react.development.js"],["d747ad68d8b63e918b83411f6780402d53ff7e91","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","0c9d0acaa1ab1e24333c71607d0fa0609193e7d7","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^31","~$module$node_modules$object_assign$index","~$module$node_modules$prop_types$checkPropTypes"]]],["^1C","re_frame/events.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R","^Y","~$re-frame.utils","^M","^Q","^X","^N","^P"]]],["^1C","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2P","^38"]]],["^1C","goog/events/listener.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","~$goog.events.ListenableKey"]]],["^1C","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2P","~$goog.html.trustedtypes","^2W","^2X","^2Y","^2Z"]]],["^1C","goog/events/listenermap.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2O","~$goog.events.Listener","^2S"]]],["^1C","goog/events/eventid.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S"]]],["^1C","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S"]]],["^1C","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S"]]],["^1C","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2O","^2P","~$goog.html.SafeUrl","^2Y","^2Z","^2T"]]],["^1C","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2P","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^3P","^2V","~$goog.html.uncheckedconversions","^2Y","^2T"]]],["^1C","reagent/impl/component.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R","^2S","^A","^2K","^3>","^3H","^3B","^2J"]]],["^1C","clojure/walk.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R"]]],["^1C","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1C","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2O","^2P","~$goog.dom.TagName","~$goog.dom.tags","^3T","^3U","~$goog.html.SafeStyleSheet","^3P","^2V","^3N","^2W","^2X","^35","^2S","^2Y","^2Z","^2T"]]],["^1C","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2S"]]],["^1C","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S"]]],["^1C","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2O","^2M","^2N"]]],["^1C","re_frame/settings.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R","^M","^X"]]],["^1C","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2O","^2P","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^3Y","~$goog.dom.safe","^3S","^3V","~$goog.math.Coordinate","~$goog.math.Size","^2S","^2N","~$goog.string.Unicode","^2R"]]],["^1C","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","~$goog.debug.Error","^41"]]],["^1C","reagent/impl/protocols.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R"]]],["^1C","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2O","^2P","^2N","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1C","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S"]]],["^30","node_modules/object-assign/index.js"],["d747ad68d8b63e918b83411f6780402d53ff7e91","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","519ffd5a4c91b67302cc9947b794966d629860cd","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^31"]]],["^1C","re_frame/db.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R","^M"]]],["^1C","goog/disposable/idisposable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S"]]],["^1C","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S"]]],["^1C","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",[]]],["^1C","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2O","^2S"]]],["^1C","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R","^2N","~$goog.string.StringBuffer"]]],["^30","node_modules/react/cjs/react.production.min.js"],["d747ad68d8b63e918b83411f6780402d53ff7e91","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","a25ef7d1b1992294ca65e96d70e1be7f70977b13","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^31","^3J"]]],["^1C","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2P"]]],["^1C","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^42","^3V","^2Y","^2T"]]],["^1C","re_frame/interceptor.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R","^X","^M","^P","^2["]]],["^1C","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S"]]],["^1C","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2T"]]],["^1C","reagent/core.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R","^A","~$reagent.impl.template","^3F","^2K","^3>","^3H","^3B","^2J"]]],["^1C","goog/debug/debug.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2O","~$goog.debug.errorcontext","^2R"]]],["^1C","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S"]]],["^1C","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","~$goog.math"]]],["^1C","goog/debug/errorcontext.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S"]]],["^1C","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2O","^2P","^3R","^4?"]]],["^1C","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^39","~$goog.dom","^3Y","^42","^3R","^3S","^2V","^35","^36","^2Y"]]],["^1C","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2P","^3S","^3T","^3U","^3[","^3P","^2V","^2Y","^2T"]]],["^1C","re_frame/utils.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R","^X"]]],["^1C","re_frame/fx.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R","^U","^Y","^N","^M","^O","^Q","^X","^P"]]],["^30","node_modules/prop-types/lib/ReactPropTypesSecret.js"],["d747ad68d8b63e918b83411f6780402d53ff7e91","f2fbccf6e656451ce34a93ff0fea3e3187aa4ad8","4eec230c5b56ef580ea9c3e7ae6358ba1f8bdbec","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^31"]]],["^1C","reagent/impl/input.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R","^3F","^3>","^3H"]]],["^1C","goog/events/event.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","~$goog.Disposable","~$goog.events.EventId"]]],["^1C","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S"]]],["^1C","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","~$goog.math.Long","~$goog.math.Integer","^2N","^2S","^2O","~$goog.Uri","^4<"]]],["^1C","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2P","^3N","^2Y","^2Z"]]],["^1C","reagent/debug.cljs"],["71172e9be671755156730f86af647b7c667093fa","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R"]]],["^1C","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2O","^2P","^3U","^2S","^2Y","^2Z","^2T"]]],["^1C","goog/events/browserevent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","~$goog.debug","^2Q","~$goog.events.Event","~$goog.events.EventType","^38","^2R"]]],["^1C","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^38"]]],["^1C","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2R"]]],["^1C","clojure/set.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R"]]],["^1C","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2O","^2P","^2N"]]],["^1C","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^2P","^2Z"]]],["^1C","goog/events/listenable.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^4B"]]],["^1C","re_frame/trace.cljc"],["6bdd905f56b7d7836ae9d5b772dc693f33550f10","^2F",["^ ","^2G",null,"^2H",["^F",[]],"^2I",["^S","^R","^M","^X","^3R"]]]]],"~:clj-info",["^ ","jar:file:/home/allie/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1587246661000,"jar:file:/home/allie/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1598162373000,"jar:file:/home/allie/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1593457559000,"jar:file:/home/allie/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1589079575000,"jar:file:/home/allie/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1593457559000,"jar:file:/home/allie/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1593457559000,"jar:file:/home/allie/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1598162373000,"jar:file:/home/allie/.m2/repository/reagent/reagent/1.0.0-alpha2/reagent-1.0.0-alpha2.jar!/reagent/interop.clj",1596911442000,"jar:file:/home/allie/.m2/repository/re-frame/re-frame/1.1.2/re-frame-1.1.2.jar!/re_frame/trace.cljc",1605285093000,"jar:file:/home/allie/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1593457559000,"jar:file:/home/allie/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1587246661000,"jar:file:/home/allie/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1593457559000,"jar:file:/home/allie/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1587246661000,"jar:file:/home/allie/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1587246662000,"jar:file:/home/allie/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1593457559000,"jar:file:/home/allie/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1593457559000,"jar:file:/home/allie/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1593457559000,"jar:file:/home/allie/.m2/repository/reagent/reagent/1.0.0-alpha2/reagent-1.0.0-alpha2.jar!/reagent/core.clj",1596911442000,"jar:file:/home/allie/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1598162373000,"jar:file:/home/allie/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1598162373000,"jar:file:/home/allie/.m2/repository/re-frame/re-frame/1.1.2/re-frame-1.1.2.jar!/re_frame/interop.clj",1605285093000,"jar:file:/home/allie/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1593457559000,"jar:file:/home/allie/.m2/repository/reagent/reagent/1.0.0-alpha2/reagent-1.0.0-alpha2.jar!/reagent/ratom.clj",1596911442000,"jar:file:/home/allie/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1587246661000,"jar:file:/home/allie/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1593457559000,"jar:file:/home/allie/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1598162373000,"jar:file:/home/allie/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1587246661000,"jar:file:/home/allie/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1593457559000,"jar:file:/home/allie/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1587246661000,"jar:file:/home/allie/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1587246661000,"jar:file:/home/allie/.m2/repository/reagent/reagent/1.0.0-alpha2/reagent-1.0.0-alpha2.jar!/reagent/debug.clj",1596911442000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^N","^O","^O","^P","^P","^Q","^Q","^R","^R","^S","^S","^T","^U","^U","^U","^V","^P","^W","^O","^X","^X","^Y","^Y"],"^Z",["^F",["^["]],"~:shadow/js-access-global",["^F",["Error"]],"^10",["^ ","^11","^Y","^12","^N","^13","^M","^14","^Q","^15","^Q","^16","^Q","^17","^X"],"~:defs",["^ ","~$kind",["^ ","^G","^1O","^6","re_frame/fx.cljc","^7",15,"^8",1,"^9",15,"^:",10,"^5",["^ ","^6","re_frame/fx.cljc","^7",15,"^8",6,"^9",15,"^:",10],"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",18,"^8",7,"^9",18,"^:",13,"~:arglists",["^1:",["~$quote",["^1:",[["~$id","~$handler"]]]]]],"^G","^1Q","^6","re_frame/fx.cljc","^:",13,"~:method-params",["^1:",[["^5G","^5H"]]],"~:protocol-impl",null,"~:arglists-meta",["^1:",[null,null]],"^8",1,"~:variadic?",false,"^7",18,"~:ret-tag","~$any","^9",18,"~:max-fixed-arity",2,"~:fn-var",true,"^5E",["^1:",["^5F",["^1:",[["^5G","^5H"]]]]]],"~$do-fx",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",24,"^8",6,"^9",24,"^:",11],"^G","^1S","^6","re_frame/fx.cljc","^:",11,"^8",1,"^7",24,"^9",24,"^5A","~$cljs.core/IMap","~:doc","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first."],"~$dispatch-later",["^ ","^5D",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",79,"^8",7,"^9",79,"^:",21,"^5E",["^1:",["^5F",["^1:",[[["^ ","~:keys",["~$ms","~$dispatch"],"^1<","~$effect"]]]]]]],"^G","^1[","^6","re_frame/fx.cljc","^:",21,"^5I",["^1:",[["~$p__33952"]]],"^5J",null,"^5K",["^1:",[null,null]],"^8",1,"^5L",false,"^7",79,"^5M",["^F",["^5N","~$js"]],"^9",79,"^5O",1,"^5P",true,"^5E",["^1:",["^5F",["^1:",[[["^ ","^5U",["^5V","^5W"],"^1<","^5X"]]]]]]]],"^18",["^ ","^P","^P","^V","^P","^R","^R"],"~:cljs.analyzer/constants",["^ ","^Z",["^F",["~:db","~:warn","~:do-fx","~:start","~:dispatch-n","~:duration","~:deregister-event-handler","~:dispatch","~:after","~:event/do-fx","~:id","~:effects","~:error","~:end","~:ms","~:fx","~:op-type","~:dispatch-later"]],"~:order",["^6?","^6:","^62","^68","^6@","^69","^63","^65","^6=","^6;","^60","^61","^6>","^67","^6<","^6A","^64","^66"]],"^1?",["^ ","^[",["^F",[]]],"^1@",["^ "],"^1A",["^S","^R","^U","^Y","^N","^M","^O","^Q","^X","^P"]],"^J","^H","~:ns-specs",["^ "],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^2E",[["^6E","~:static-fns"],true,["^6E","~:shadow-tweaks"],null,["^6E","~:source-map-inline"],null,["^6E","~:elide-asserts"],false,["^6E","~:optimize-constants"],null,["^6E","^1F"],null,["^6E","~:external-config"],null,["^6E","~:tooling-config"],null,["^6E","~:emit-constants"],null,["^6E","~:load-tests"],null,["^6E","~:form-size-threshold"],null,["^6E","~:data-readers"],null,["^6E","~:infer-externs"],"~:auto",["^6E","^1H"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6E","~:fn-invoke-direct"],null,["^6E","~:source-map"],"/dev/null"]]]